/* ===== CSS Variables ===== */
:root {
    --primary-color: #17A2B8; /* Main  color (Teal/Blue) */
    --primary-darker: #138496;
    --secondary-color: #6c757d; /* Secondary text, icons */
    --secondary-darker: #5a6268;
    --background-color: #f8f9fa; /* Light gray main background */
    --container-bg: #ffffff; /* White background for containers */
    --container-alt-bg: #eefbfd; /* Very light blue for alt sections like card back */
    --text-color: #212529; /* Default text */
    --text-light: #495057;
    --text-lighter: #6c757d;
    --border-color: #dee2e6;
    --border-color-darker: #ced4da;
    --success-color: #198754; /* Green */
    --danger-color: #dc3545; /* Red */
    --warning-color: #ffc107; /* Yellow */
    --info-color: #0dcaf0; /* Light Blue */
    --selection-bg: #cfe2ff; /* Light blue for selection */
    --selection-border: #9ec5fe;

    --font-family-sans-serif: -apple-system, BlinkMacSystemFont, "Segoe UI", Roboto, "Helvetica Neue", Arial, sans-serif;
    --base-font-size: 0.9rem;
    --base-line-height: 1.5;

    --border-radius: 0.3rem;
    --box-shadow-sm: 0 1px 2px rgba(0, 0, 0, 0.05);
    --box-shadow: 0 4px 6px rgba(0, 0, 0, 0.1);
    --box-shadow-lg: 0 10px 15px rgba(0, 0, 0, 0.1);
    --transition-speed: 0.2s;
    --safe-area-inset-top: env(safe-area-inset-top, 0px); /* 폴백 값을 0px 또는 적절한 px (예: 20px)로 설정 */
    --safe-area-inset-right: env(safe-area-inset-right, 0px);
    --safe-area-inset-bottom: env(safe-area-inset-bottom, 0px); /* 하단 네비게이션 바 등이 있다면 필요 */
    --safe-area-inset-left: env(safe-area-inset-left, 0px);
}

/* ===== Basic Reset & Body ===== */
html, body {
    height: 100%;
    overflow: visible;
    margin: 0;
    padding: 0;
    font-size: 16px;
    overflow-x: hidden; /* 가로 스크롤 방지 */
}

body {
    font-family: var(--font-family-sans-serif);
    font-size: var(--base-font-size);
    line-height: var(--base-line-height);
    background-color: var(--background-color);
    color: var(--text-color);
    display: flex;
    flex-direction: column;
    min-height: 100vh; 
}

/* ===== Sidebar ===== */
.folder-sidebar {
    height: 100vh; /* 화면 전체 높이 */
    width: 14rem;
    position: fixed;
    z-index: 1030;
    top: 0; /* 화면 상단에 고정 */
    left: -14rem;
    background-color: var(--container-bg);
    overflow-y: auto;
    /* padding: 1rem; */ /* 기존 패딩 */
    /* 수정된 패딩: 상단에만 safe-area-inset-top 추가 */
    padding: calc(1rem + var(--safe-area-inset-top)) 1rem 1rem calc(1rem + var(--safe-area-inset-left));
    transition: left var(--transition-speed) ease-in-out;
    box-shadow: 3px 0px 8px rgba(0,0,0,0.08);
    border-right: 1px solid var(--border-color);
    box-sizing: border-box;
}
.folder-sidebar.open { left: 0; }
.folder-sidebar h3 {
    margin-top: 0;
    font-size: 1.15rem;
    font-weight: 600;
    margin-bottom: 1rem;
    color: var(--text-color);
    border-bottom: 2px solid var(--primary-color);
    padding-bottom: 0.75rem;
}
#folder-list ul { list-style-type: none; padding-left: 1rem; margin-top: 0.5rem; }
#folder-list li {
    margin-bottom: 0.3rem;
    position: relative;
}
.folder-content-wrapper {
    display: flex;
    align-items: center;
    width: 100%;
    cursor: default;
}
.folder-icons-container {
    display: inline-flex;
    align-items: center;
}
#folder-list .folder-icon {
    display: inline-block;
    width: 1.2em;
    margin-right: 0.4em;
    margin-left: 0.2em;
    text-align: center;
    color: var(--text-lighter);
    font-size: 0.9em;
}
#folder-list .folder-icon::before {
    font-family: "Font Awesome 6 Free";
    font-weight: 900;
    content: "\f07b"; /* fa-folder */
}
#folder-list .folder-name {
    cursor: pointer;
    padding: 0.35rem 0.7rem;
    border-radius: var(--border-radius);
    transition: background-color var(--transition-speed), color var(--transition-speed);
    font-size: 0.9rem;
    color: var(--text-light);
    flex-grow: 1;
}
#folder-list .folder-item > ul {
    list-style-type: none;
    padding-left: 20px;
    margin-top: 0.3rem;
    width: 100%;
    box-sizing: border-box;
}
#folder-list ul ul {
    border-left: 1px dotted var(--border-color-darker);
    margin-left: 8px;
    position: relative;
}
#folder-list ul ul > li::before {
    content: "";
    position: absolute;
    left: -12px;
    top: 0.7em;
    width: 10px;
    height: 1px;
    background-color: var(--border-color-darker);
}
#folder-list .folder-item.open > ul {
    max-height: 1000px;
}
#folder-list .folder-name:hover {
    background-color: #e9ecef;
    color: var(--text-color);
}
#folder-list .folder-item.selected > .folder-name {
    background-color: var(--primary-color);
    color: white;
    font-weight: 500;
}
#folder-list .toggle-icon {
    display: inline-block;
    width: 1rem;
    text-align: center;
    cursor: pointer;
    font-family: monospace;
    color: var(--text-lighter);
    user-select: none;
    transition: color var(--transition-speed), transform var(--transition-speed);
    font-size: 0.8em;
}
#folder-list .toggle-icon:hover { color: var(--primary-color); }
#folder-list .toggle-icon[onclick*="▼"] { transform: rotate(90deg); }

/* ===== Sidebar Overlay ===== */
body::after {
    content: "";
    position: fixed;
    top: 0; left: 0;
    width: 100%; height: 100%;
    background-color: rgba(0, 0, 0, 0.4);
    z-index: 1020;
    opacity: 0; visibility: hidden;
    transition: opacity var(--transition-speed) ease-in-out, visibility 0s linear var(--transition-speed);
}
body.sidebar-open::after {
    opacity: 1; visibility: visible;
    transition: opacity var(--transition-speed) ease-in-out, visibility 0s linear 0s;
}

/* ===== Main Container & Inner Container ===== */
.main-container {
    flex-grow: 1;
    display: flex;
    flex-direction: column;
    overflow-y: auto;
    overflow-x: hidden;
    position: relative;
    z-index: 1;
    min-height: 0; /* flex 자식 요소가 넘칠 때 부모가 늘어나지 않도록 */
    transition: padding-left var(--transition-speed) ease-in-out;
    box-sizing: border-box; /* 패딩이 너비/높이에 포함되도록 */

    /* 세이프 에어리어 적용 */
    padding-top: var(--safe-area-inset-top);
    padding-right: var(--safe-area-inset-right);
    /* 하단 버튼 등이 시스템 UI에 가려지지 않도록 하단 패딩도 고려 */
    padding-bottom: var(--safe-area-inset-bottom);
    padding-left: var(--safe-area-inset-left);
}
.container {
    width: 98%;
    max-width: 90rem;
    margin: 0.75rem auto;
    background-color: var(--container-bg);
    padding: 1.25rem;
    border-radius: 0.5rem;
    box-shadow: var(--box-shadow);
    border: 1px solid var(--border-color);
    flex-grow: 1;
    display: flex;
    flex-direction: column;
    overflow: visible;
    box-sizing: border-box;
    min-height: 0;
}

/* ===== Top Controls Area (3-line layout) ===== */
.top-controls {
    flex-shrink: 0;
    background-color: #ffffff;
    border-bottom: 1px solid var(--border-color);
    box-shadow: var(--box-shadow-sm);
    box-sizing: border-box;
    margin-bottom: 1rem;
    position: relative;
    z-index: 1000;
}

.control-row {
    display: flex;
    align-items: center;
    margin-bottom: 0.5rem; /* 각 줄 사이의 간격 */
    flex-wrap: wrap; /* 기본적으로 줄바꿈 허용 */
    gap: 0.5rem; /* 요소들 사이의 기본 간격 */
    box-sizing: border-box;
    width: 100%;
    justify-content: flex-start !important; /* <<< 모든 컨트롤 줄을 왼쪽으로 정렬 */
}
.control-row:last-child { margin-bottom: 0; }

/* 첫 번째, 두 번째 줄: 요소들을 양 끝으로 분산 */
.top-controls > .control-row:nth-child(1),
.top-controls > .control-row:nth-child(2) {
    justify-content: space-between;
}

/* 세 번째 줄: 왼쪽 정렬, 선택 관리 버튼은 오른쪽으로 */
.top-controls > .control-row:nth-child(3) {
    justify-content: flex-start; /* 기본 왼쪽 정렬 */
}
.top-controls > .control-row:nth-child(3) .selection-mode-controls {
    margin-left: auto; /* 선택 관리 버튼 그룹을 오른쪽으로 밀기 */
    display: flex;
    gap: 0.5rem;
}


/* Hamburger Button */
.hamburger-btn {
    font-size: 1.5rem; background: none; border: none; cursor: pointer;
    padding: 0.25rem 0.5rem; margin-right: 0.5rem; line-height: 1;
    color: var(--text-lighter);
    transition: color var(--transition-speed), background-color var(--transition-speed);
    border-radius: var(--border-radius);
}
.hamburger-btn:hover { background-color: #e9ecef; color: var(--text-light); }

/* General Button Styling */
.control-btn, .dropbtn {
    border: 1px solid var(--border-color-darker);
    border-radius: var(--border-radius);
    padding: 0.6rem 1rem; /* 기본 패딩, 반응형에서 조절 */
    font-size: var(--base-font-size); /* 기본 폰트, 반응형에서 조절 */
    line-height: 1.2;
    white-space: nowrap;
    text-align: center;
    cursor: pointer;
    transition: background-color var(--transition-speed), border-color var(--transition-speed), box-shadow var(--transition-speed);
    flex-shrink: 0; /* 버튼이 너무 줄어들지 않도록 */
}
.control-btn:hover, .dropbtn:hover {
    border-color: var(--secondary-darker);
    background-color: #e9ecef;
    color: var(--text-color);
    box-shadow: 0 2px 4px rgba(0,0,0,0.07);
}
.dropbtn {
    background-color: var(--primary-color);
    border-color: var(--primary-color);
    color: white;
    font-weight: 500;
}
.dropbtn:hover {
    background-color: var(--primary-darker);
    border-color: var(--primary-darker);
}
.control-btn:focus, .dropbtn:focus {
    outline: none;
    border-color: var(--primary-color);
    box-shadow: 0 0 0 0.2rem rgba(var(--primary-color), 0.25);
    z-index: 2;
}
.control-btn:disabled, .dropbtn:disabled {
    background-color: #e9ecef; color: var(--text-lighter);
    border-color: var(--border-color); cursor: not-allowed;
    opacity: 0.65; box-shadow: none;
}

/* Specific Button Colors (기존 스타일 유지 또는 새 버튼에 맞게 조정) */
#btn-show-card-view, #btn-toggle-sentence-view {
    background-color: #FD7E14; border-color: #FD7E14; color: white;
}
#btn-show-card-view:hover, #btn-toggle-sentence-view:hover {
    background-color: #E8590C; border-color: #E8590C;
}

/* TTS 드롭다운 메뉴의 내용물(dropdown-content)만 오른쪽 기준으로 펼쳐지도록 수정 */
#tts-menu-dropdown .dropdown-content {
    left: auto;  /* 왼쪽 기준점 해제 */
    right: 0;    /* 오른쪽을 기준으로 위치 설정 */
    /* min-width는 그대로 유지하거나, 필요시 TTS 메뉴에 맞게 조정 */
}


/* TTS 드롭다운 버튼은 일반 dropbtn 스타일 사용 */
#tts-menu-dropdown .dropbtn { /* 필요시 개별 스타일링 */ }

#btn-delete-selected {
    background-color: var(--danger-color); border-color: var(--danger-color); color: white; font-weight: 500;
}
#btn-delete-selected:hover { background-color: #bb2d3b; border-color: #b02a37; }
.control-btn.swap-button {
    background-color: #FD7E14; border-color: #FD7E14; color: white;
    padding: 0.4rem; line-height: 1; width: 3rem;
    display: inline-flex; align-items: center; justify-content: center;
}
.control-btn.swap-button .swap-icons i { font-size: 0.8em; line-height: 1.1; }
.control-btn.swap-button:hover { background-color: #E8590C; border-color: #E8590C; }

/* Input Fields Styling */
.control-row .range-label {
    margin-left: 0.3rem; margin-right: 0.2rem; font-size: var(--base-font-size);
    white-space: nowrap; color: var(--text-light);
    padding: 0.5rem 0; line-height: 1.5;
}
.control-input.range-input {
    width: 3.5rem; padding: 0.55rem; font-size: var(--base-font-size);
    border: 1px solid var(--border-color-darker); border-radius: var(--border-radius);
    box-sizing: border-box; text-align: center;
    transition: border-color var(--transition-speed), box-shadow var(--transition-speed);
}
.control-input.range-input:focus {
    border-color: var(--primary-color); outline: 0;
    box-shadow: 0 0 0 0.2rem rgba(var(--primary-color), 0.25);
}

/* Dropdown Content Styling (기존과 거의 동일) */
.dropdown {
    position: relative;
    display: inline-block;
}

.dropdown-content {
    display: none;
    position: absolute;
    background-color: var(--container-bg);
    min-width: 12rem; /* 기본 최소 너비, 내용에 따라 조절될 수 있음 */
    box-shadow: var(--box-shadow-lg);
    z-index: 1050;
    border-radius: var(--border-radius);
    padding: 0.5rem 0;
    margin-top: 0.2rem;
    border: 1px solid var(--border-color);
    /* 기본적으로 왼쪽 정렬로 펼쳐짐 (left: 0; right: auto; 가 암묵적 또는 명시적) */
    left: 0;
    right: auto;
}

.dropdown:hover > .dropdown-content,
.dropdown > button:focus + .dropdown-content,
.dropdown > button:active + .dropdown-content { /* 모바일 터치 고려 */
    display: block; top: 100%; left: 0;
}
/* 드롭다운 내부의 링크들은 기본적으로 왼쪽 정렬을 유지합니다. */
.dropdown-content a,
.dropdown-content label.custom-file-upload {
    color: var(--text-light);
    padding: 0.6rem 1.2rem;
    text-decoration: none;
    display: block;
    white-space: nowrap;
    cursor: pointer;
    font-size: var(--base-font-size);
    line-height: 1.5;
    transition: background-color var(--transition-speed), color var(--transition-speed);
    text-align: left; /* 명시적으로 왼쪽 정렬 (대부분 기본값) */
}

.dropdown-content a:hover,
.dropdown-content label.custom-file-upload:hover {
    background-color: #e9ecef; color: var(--text-color);
}
.dropdown-content .dropdown-header {
    padding: 0.6rem 1.2rem; font-size: 0.8rem; font-weight: 600; color: var(--text-lighter);
    display: block; margin-top: 0.5rem; text-transform: uppercase; letter-spacing: 0.5px; cursor: default;
}
.dropdown-content .dropdown-divider {
    height: 1px; margin: 0.5rem 0; overflow: hidden; background-color: var(--border-color); border: 0;
}
.dropdown-content .dropdown-header:first-child { margin-top: 0; }
.accordion-dropdown .submenu-toggle { cursor: pointer; display: block; position: relative; }
.accordion-dropdown .submenu-content {
    max-height: 0; overflow: hidden; transition: max-height 0.3s ease-out;
    padding-left: 0.75rem; background-color: #f8f9fa; border-top: 1px solid var(--border-color);
}
.accordion-dropdown .submenu-item.open .submenu-content {
    max-height: 30rem; padding-top: 0.5rem; padding-bottom: 0.5rem;
}
#language-menu-content { padding: 0; min-width: 14rem; }
.language-type-item { border-bottom: 1px solid #F1F1F1; }
.language-type-item:last-child { border-bottom: none; }
.type-link { display: block; padding: 0.7rem 1.2rem; font-weight: 500; text-decoration: none; color: var(--text-light); cursor: pointer; transition: background-color var(--transition-speed); font-size: 0.9rem; }
.type-link:hover { background-color: #e9ecef; }
.type-link.selected { color: var(--primary-color); font-weight: 600; }
.language-list { padding-left: 0; background-color: var(--container-bg); overflow: hidden; max-height: 0; transition: max-height 0.3s ease-out; }
.language-list.open { max-height: 30rem; }
.language-item { border-top: 1px dashed #F1F1F1; }
.language-item:first-child { border-top: none; }
.lang-link { display: block; padding: 0.6rem 1.2rem; text-decoration: none; color: var(--text-light); cursor: pointer; transition: background-color var(--transition-speed); font-size: var(--base-font-size); }
.lang-link:hover { background-color: #e9ecef; }
.lang-link.selected { background-color: #e0f7fa; color: var(--primary-darker); font-weight: 500; }
.voice-list { padding-left: 1.2rem; background-color: #f8f9fa; overflow: hidden; max-height: 0; transition: max-height 0.3s ease-out; }
.voice-list.open { max-height: 20rem; }
.voice-link { display: block; padding: 0.5rem 1.2rem; text-decoration: none; color: var(--text-lighter); font-size: 0.85rem; cursor: pointer; transition: background-color var(--transition-speed); }
.voice-link:hover { background-color: #E0E0E0; color: var(--text-color); }
.voice-link.selected { color: var(--primary-darker); font-weight: bold; background-color: #d1ecf1; }

/* TTS 드롭다운 내부 항목 스타일 */
#tts-menu-dropdown .dropdown-content a {
    /* 기본 a 스타일 상속 */
}
/* TTS 제어 관련 링크들 (일시중단, 연결재생, 완전중단)도 왼쪽 정렬 유지 */
#tts-menu-dropdown .tts-control-item {
    display: block; /* JS에서 none/block으로 제어 */
    /* text-align: left; /* 이미 위에서 .dropdown-content a 에 적용됨 */
    /* padding-right 값은 필요 없어짐 */
}
#tts-menu-dropdown .tts-control-item:hover {
    /* 기본 hover 스타일 상속 */
}


/* ===== Word List, Flashcard, Exam, Sentence View (기존 스타일 대부분 유지) ===== */
/* (이전 답변의 .word-list-main, .flashcard-view, .exam-view, .sentence-view 등 관련 CSS를 여기에 붙여넣으세요) */
/* (단, top-controls 영역이 줄어들었으므로, 각 뷰의 상단 마진 등은 확인/조정 필요할 수 있음) */

.word-list-main { flex-grow: 1; display: flex; flex-direction: column; overflow: visible; margin-top: 0; min-height: 0; position: relative; z-index: 500; }
.word-table-container { flex-grow: 1; border: 1px solid var(--border-color); border-radius: var(--border-radius); display: flex; flex-direction: column; overflow: hidden; min-height: 0; background-color: var(--container-bg); }
.word-table-header-wrapper { flex-shrink: 0; background-color: #e9ecef; border-bottom: 2px solid var(--border-color-darker); border-top-left-radius: var(--border-radius); border-top-right-radius: var(--border-radius); position: relative; z-index: 10; }
.word-table-body-wrapper { flex-grow: 1; overflow-y: auto; overflow-x: hidden; position: relative; min-height: 0; -webkit-overflow-scrolling: touch; }
#word-table-header, #word-table-body { width: 100%; border-collapse: separate; border-spacing: 0; table-layout: fixed; }
#word-table-header th { position: sticky; top: 0; z-index: 1; background-color: inherit; font-size: 0.9rem; font-weight: 600; color: var(--text-light); padding: 0.8rem 1rem; text-align: center; vertical-align: middle; white-space: nowrap; text-overflow: ellipsis; border-bottom: none; user-select: none; }
#word-table-header th:not(:first-child) { cursor: col-resize; }
#word-table-header th.col-word, #word-table-header th.col-meaning { text-align: left; }
#word-table-body td { border-bottom: 1px solid var(--border-color); padding: 0.8rem 1rem; text-align: left; vertical-align: middle; font-size: var(--base-font-size); line-height: var(--base-line-height); color: var(--text-color); white-space: normal; word-break: break-word; overflow-wrap: break-word; transition: background-color var(--transition-speed) ease-in-out; }
#word-table-body td.col-number { text-align: center; color: var(--text-lighter); font-size: 0.85rem; font-weight: 500; user-select: none; }
#word-table-body tr:last-child td { border-bottom: none; }
#word-table-body tbody tr:hover td { background-color: var(--container-alt-bg); }
#word-table-body tbody tr.highlighted-row td { background-color: #d1e7dd !important; color: #0a3622 !important; font-weight: 500; }
body.selection-mode #word-table-header #select-all-checkbox, body.selection-mode #word-table-body .word-row-checkbox { display: inline-block; }
body.selection-mode #word-table-body tbody tr td:first-child { cursor: pointer; }
body.selection-mode #word-table-body tbody tr td { transition: background-color 0.1s; }
body.selection-mode #word-table-body tbody tr.row-selected td { background-color: var(--selection-bg); }
body.selection-mode #word-table-body tbody tr.row-selected:hover td { background-color: color-mix(in srgb, var(--selection-bg) 85%, #000); }
body.resizing-column { cursor: col-resize; user-select: none; }
.context-menu { display: none; position: absolute; z-index: 1100; background-color: var(--container-bg); border: 1px solid var(--border-color-darker); box-shadow: var(--box-shadow); border-radius: var(--border-radius); min-width: 11rem; padding: 0.5rem 0; }
.context-menu ul { list-style: none; padding: 0; margin: 0; }
.context-menu li a { display: block; padding: 0.6rem 1.2rem; text-decoration: none; color: var(--text-light); font-size: var(--base-font-size); white-space: nowrap; transition: background-color var(--transition-speed), color var(--transition-speed); }
.context-menu li a:hover { background-color: #e9ecef; color: var(--text-color); }
input[type="file"] { display: none; }
.flashcard-view { flex-grow: 1; display: flex; flex-direction: column; align-items: center; justify-content: center; overflow: hidden; padding: 1.5rem; box-sizing: border-box; background-color: #e0f7fa; border-radius: 0.5rem; margin-top: 0; min-height: 0; perspective: 1200px; gap: 0.1rem; }
.card-container { margin-bottom: 0.1rem; flex-grow: 0; display: flex; align-items: center; justify-content: center; width: 100%; max-width: 35rem; }
.card { width: 90%; max-width: 32rem; min-height: 14rem; position: relative; perspective: 1200px; transform-style: preserve-3d; transition: transform 0.7s cubic-bezier(0.4, 0, 0.2, 1); cursor: pointer; border-radius: 1rem; box-shadow: var(--box-shadow-lg); flex-grow: 0; display: flex; overflow: visible; }
.card.flipped { transform: rotateY(180deg); }
.card-face { position: absolute; width: 100%; height: 100%; backface-visibility: hidden; -webkit-backface-visibility: hidden; box-sizing: border-box; border-radius: inherit; padding: 1.5rem; overflow: hidden; display: flex; transform-style: preserve-3d; flex-direction: column; align-items: center; justify-content: center; }
.card-front { background-color: var(--container-bg); color: var(--text-color); border: 1px solid var(--border-color); z-index: 2 }
.card-back { background-color: var(--container-alt-bg); color: var(--primary-darker); transform: rotateY(180deg); border: 1px solid color-mix(in srgb, var(--container-alt-bg) 80%, #000); z-index: 1 }
.card-face::before, .card-face::after { content: ""; position: absolute; top: 50%; transform: translateY(-50%) translateZ(1px); width: 35px; height: 35px; font-size: 30px; line-height: 35px; text-align: center; color: #333; opacity: 0; pointer-events: none; transition: opacity 0.2s ease-in-out; z-index: 5; }
.card:not(.flipped) .card-front:hover::before, .card:not(.flipped) .card-front:hover::after { opacity: 0.4; }
.card.flipped .card-back:hover::before, .card.flipped .card-back:hover::after { opacity: 0.4; }
.card-face::before { content: "〈"; left: 10px; }
.card-face::after { content: "〉"; right: 10px; }
.knowledge-state-controls .ks-btn { margin: 0 5px; padding: 0.5rem 0.8rem; font-size: 0.85rem; background-color: #f8f9fa; border: 1px solid #ced4da; color: #495057; }
.knowledge-state-controls .ks-btn:hover { border-color: #adb5bd; background-color: #e9ecef; }
.knowledge-state-controls .ks-btn.active { font-weight: bold; color: white; }
.knowledge-state-controls .ks-btn[data-state="known"].active { background-color: var(--success-color); border-color: var(--success-color); }
.knowledge-state-controls .ks-btn[data-state="unsure"].active { background-color: var(--warning-color); border-color: var(--warning-color); color: #333; }
.knowledge-state-controls .ks-btn[data-state="unknown"].active { background-color: var(--danger-color); border-color: var(--danger-color); }
.card.state-known { border: 3px solid var(--success-color) !important; }
.card.state-unsure { border: 3px solid var(--warning-color) !important; }
.card.state-unknown { border: 3px solid var(--danger-color) !important; }
.card-navigation-overlay { position: absolute; top: 0; bottom: 0; width: 30%; z-index: 5; cursor: pointer; }
.card-navigation-overlay.left-nav { left: 0; }
.card-navigation-overlay.right-nav { right: 0; }
.card-content { width: 100%; height: 100%; display: flex; flex-direction: column; position: relative; z-index: 1; align-items: center; justify-content: flex-start; text-align: center; overflow-y: auto; overflow-x: hidden; box-sizing: border-box; line-height: 1.4; font-size: 1.5rem; font-weight: 500; word-break: break-word; overflow-wrap: break-word; padding: 0.5rem; -webkit-overflow-scrolling: touch; touch-action: pan-y; scrollbar-width: thin; scrollbar-color: var(--primary-color) var(--container-alt-bg); }
.card-content::-webkit-scrollbar { width: 8px; }
.card-content::-webkit-scrollbar-track { background: var(--container-alt-bg); border-radius: 4px; }
.card-content::-webkit-scrollbar-thumb { background-color: var(--primary-color); border-radius: 4px; border: 2px solid var(--container-alt-bg); }
.card-content::-webkit-scrollbar-thumb:hover { background-color: var(--primary-darker); }
.tts-toggle-icon { position: absolute; bottom: 1rem; right: 1rem; font-size: 1.4rem; color: var(--text-lighter); cursor: pointer; padding: 0.5rem; transition: color var(--transition-speed), transform var(--transition-speed); z-index: 5; background-color: rgba(255, 255, 255, 0.7); border-radius: 50%; width: 2.5rem; height: 2.5rem; display: flex; align-items: center; justify-content: center; }
.tts-toggle-icon:hover { color: var(--primary-color); transform: scale(1.1); }
.tts-toggle-icon.muted { color: #adb5bd; }
.tts-toggle-icon.muted:hover { color: var(--secondary-color); }
.card-controls { display: flex; flex-direction: column; justify-content: center; align-items: center; flex-wrap: wrap; gap: 0.75rem; flex-shrink: 0; padding: 1rem 0; width: 100%; max-width: 35rem; box-sizing: border-box; }
.card-controls button { padding: 0.6rem 1rem; font-size: 0.9rem; min-width: 5rem; }
.card-controls .control-btn, .card-controls .ks-btn { padding: 0.6rem 1rem; font-size: 0.9rem; margin: 0; white-space: nowrap; }
.card-counter { font-size: 1rem; font-weight: 500; color: var(--text-light); margin: 0 0.5rem; white-space: nowrap; padding: 0.6rem 0.8rem; }
.card-nav-actions { display: flex; justify-content: center; align-items: center; flex-wrap: wrap; gap: 0.5rem; width: 100%; }
.knowledge-state-controls { display: flex; justify-content: center; align-items: center; flex-wrap: wrap; gap: 0.5rem; width: auto; }
.card-controls .control-btn:not(#btn-close-card-view) { background-color: #FD7E14; border-color: #FD7E14; color: white; }
.card-controls .control-btn:not(#btn-close-card-view):hover, .card-controls .control-btn:not(#btn-close-card-view):focus { background-color: #E8590C; border-color: #E8590C; color: white; }
#btn-close-card-view { background-color: var(--secondary-color); color: white; border-color: var(--secondary-color); }
#btn-close-card-view:hover, #btn-close-card-view:focus { background-color: var(--secondary-darker); border-color: var(--secondary-darker); color: white; }
.exam-view { flex-grow: 1; display: flex; flex-direction: column; justify-content: flex-start; overflow: hidden; padding: 1.5rem; box-sizing: border-box; background-color: #f0f4f8; border-radius: 0.5rem; margin-top: 0; min-height: 0; }
.sentence-view { flex-grow: 1; display: flex; flex-direction: column; overflow: hidden; padding: 1rem; box-sizing: border-box; background-color: #f0f8ff; border-radius: 0.5rem; margin-top: 0; min-height: 0; }
.sentence-view h2 { margin-top: 0; margin-bottom: 1rem; padding-bottom: 0.5rem; border-bottom: 2px solid var(--primary-color); color: var(--primary-darker); font-size: 1.3rem; text-align: center; }
.sentence-list-container { flex-grow: 1; overflow-y: auto; padding-right: 0.5rem; -webkit-overflow-scrolling: touch; }
.sentence-entry { background-color: var(--container-bg); border: 1px solid var(--border-color); border-radius: var(--border-radius); margin-bottom: 0.8rem; box-shadow: var(--box-shadow-sm); overflow: hidden; }
.headword { padding: 0.8rem 1rem; font-size: 1.2rem; font-weight: 600; color: var(--text-color); background-color: #e9ecef; cursor: pointer; border-bottom: 1px solid var(--border-color); position: relative; transition: background-color var(--transition-speed); user-select: none; }
.headword:hover { background-color: #dee2e6; }
.headword::after { content: '▶'; position: absolute; right: 1rem; top: 50%; transform: translateY(-50%); font-size: 0.8em; color: var(--text-lighter); transition: transform var(--transition-speed) ease-out; }
.sentence-entry.open .headword::after { transform: translateY(-50%) rotate(90deg); }
.details-container { max-height: 0; overflow: hidden; transition: max-height 0.3s ease-out, padding 0.3s ease-out; padding: 0 1rem; background-color: #ffffff; }
.sentence-entry.open .details-container { max-height: 40vh; overflow-y: auto; overflow-x: hidden; padding: 1rem; border-top: 1px dashed var(--border-color); transition: max-height 0.3s ease-out, padding 0.3s ease-out; background-color: #ffffff; box-sizing: border-box; }
.entry-item { margin-bottom: 1rem; padding-bottom: 1rem; border-bottom: 1px dotted var(--border-color-darker); }
.entry-item:last-child { margin-bottom: 0; padding-bottom: 0; border-bottom: none; }
.definition { font-style: normal; color: var(--text-light); margin-bottom: 0.5rem; font-size: 1.05rem; white-space: normal; word-break: break-word; overflow-wrap: break-word; }
.example-sentence { font-weight: 500; color: var(--text-color); margin-bottom: 0.3rem; cursor: pointer; line-height: 1.5; transition: color var(--transition-speed); white-space: normal; word-break: break-word; overflow-wrap: break-word; }
.example-sentence:hover { color: var(--primary-color); }
.translation { color: var(--secondary-color); font-size: 0.9rem; padding-left: 1rem; display: none; line-height: 1.4; opacity: 0; transition: opacity 0.3s ease-in-out; white-space: normal; word-break: break-word; overflow-wrap: break-word; }
.translation[style*="block"] { opacity: 1; }
#examContentArea { flex-grow: 1; width: 100%; overflow-y: auto; padding: 1rem 0; box-sizing: border-box; display: flex; justify-content: center; align-items: flex-start; }
#multipleChoiceArea { width: 100%; max-width: 40rem; text-align: center; }
#mcQuestion { font-size: 1.6rem; font-weight: 600; margin-bottom: 2rem; padding: 1.2rem; background-color: var(--container-bg); border-radius: var(--border-radius); box-shadow: var(--box-shadow); min-height: 5rem; display: flex; align-items: center; justify-content: center; line-height: 1.4; word-break: break-word; overflow-wrap: break-word; border-left: 5px solid var(--primary-color); }
#mcOptions li { background-color: var(--container-bg); border: 1px solid var(--border-color); padding: 1rem 1.2rem; border-radius: var(--border-radius); cursor: pointer; transition: all var(--transition-speed); font-size: 1rem; word-break: break-word; overflow-wrap: break-word; box-shadow: var(--box-shadow-sm); position: relative; text-align: left; }
#mcOptions li::before { content: counter(mc-option); counter-increment: mc-option; display: inline-block; background-color: var(--primary-color); color: white; border-radius: 50%; width: 1.5rem; height: 1.5rem; line-height: 1.5rem; text-align: center; font-size: 0.8rem; font-weight: bold; margin-right: 0.75rem; }
#mcOptions { counter-reset: mc-option; list-style: none; padding: 0; margin: 0; display: grid; gap: 0.8rem; }
#mcOptions li:hover { background-color: #e9ecef; border-color: var(--border-color-darker); transform: translateY(-2px); box-shadow: var(--box-shadow); }
#mcOptions li.selected { background-color: var(--selection-bg) !important; border-color: var(--selection-border) !important; font-weight: bold; box-shadow: var(--box-shadow); transform: scale(1.02); }
#mcOptions li.correct { background-color: #d1e7dd !important; border-color: #a3cfbb !important; color: #0a3622; font-weight: bold; }
#mcOptions li.correct::after { content: '✔'; color: var(--success-color); font-weight: bold; position: absolute; right: 1rem; top: 50%; transform: translateY(-50%); }
#mcOptions li.incorrect { background-color: #f8d7da !important; border-color: #f1aeb5 !important; color: #58151c; opacity: 0.8; }
#mcOptions li.incorrect::after { content: '✖'; color: var(--danger-color); font-weight: bold; position: absolute; right: 1rem; top: 50%; transform: translateY(-50%); }
#mcFeedback { margin-top: 1.5rem; font-weight: bold; min-height: 2rem; font-size: 1.1rem; padding: 0.5rem; border-radius: var(--border-radius); }
#mcFeedback.correct { color: var(--success-color); background-color: #d1e7dd; border: 1px solid #a3cfbb;}
#mcFeedback.incorrect { color: var(--danger-color); background-color: #f8d7da; border: 1px solid #f1aeb5;}
#matchingGameArea { width: 100%; max-width: 50rem; }
.matching-columns { display: flex; justify-content: space-around; gap: 1.5rem; width: 100%; }
.matching-column { flex: 1; min-width: 12rem; }
.matching-column h4 { text-align: center; color: var(--text-light); margin-bottom: 0.5rem; font-size: 0.9rem; }
.matching-column ul { list-style: none; padding: 0; margin: 0; border: 1px solid var(--border-color); border-radius: var(--border-radius); background-color: var(--container-bg); min-height: 22rem; padding: 0.75rem; box-shadow: inset 0 1px 3px rgba(0,0,0,0.05); }
.matching-column li { background-color: #ffffff; border: 1px solid var(--border-color); padding: 0.8rem 1rem; margin-bottom: 0.6rem; border-radius: var(--border-radius); cursor: pointer; transition: all var(--transition-speed); font-size: 0.95rem; word-break: break-word; overflow-wrap: break-word; box-shadow: var(--box-shadow-sm); }
.matching-column li:last-child { margin-bottom: 0; }
.matching-column li:hover { background-color: #e9ecef; border-color: var(--border-color-darker); transform: translateY(-2px); box-shadow: var(--box-shadow); }
.matching-column li.selected-match { background-color: var(--selection-bg) !important; border-color: var(--selection-border) !important; font-weight: bold; box-shadow: var(--box-shadow); transform: scale(1.02); }
.matching-column li.matched { opacity: 0.5; cursor: default; background-color: #e9ecef; border-style: dashed; box-shadow: none; transform: none; text-decoration: line-through; }
#matchingFeedback { text-align: center; margin-top: 1.5rem; font-weight: bold; min-height: 2rem; font-size: 1.1rem; padding: 0.5rem; border-radius: var(--border-radius); }
#matchingFeedback.correct { color: var(--success-color); background-color: #d1e7dd; border: 1px solid #a3cfbb; }
#matchingFeedback.incorrect { color: var(--danger-color); background-color: #f8d7da; border: 1px solid #f1aeb5; }
@keyframes incorrect-shake { 0%, 100% { transform: translateX(0); } 10%, 30%, 50%, 70%, 90% { transform: translateX(-6px); } 20%, 40%, 60%, 80% { transform: translateX(6px); } }
.matching-column li.incorrect-shake { animation: incorrect-shake 0.6s cubic-bezier(.36,.07,.19,.97) both; border-color: var(--danger-color) !important; }
#examControls { margin-top: 2rem; text-align: center; padding-bottom: 1rem; flex-shrink: 0; }
#examControls button { margin: 0 0.5rem; min-width: 7rem; padding: 0.6rem 1rem; }
#examProgress { display: inline-block; min-width: 9rem; text-align: center; margin-right: 1rem; font-weight: 500; color: var(--text-light); background-color: #e9ecef; padding: 0.6rem 1rem; border-radius: var(--border-radius); font-size: 0.9rem; }
#btn-check-mc, #btn-next-item, #btn-show-results { background-color: var(--primary-color); color: white; border-color: var(--primary-color); }
#btn-check-mc:hover, #btn-next-item:hover, #btn-show-results:hover { background-color: var(--primary-darker); border-color: var(--primary-darker); }
#btn-exit-exam { background-color: var(--secondary-color); color: white; border-color: var(--secondary-color); }
#btn-exit-exam:hover { background-color: var(--secondary-darker); border-color: var(--secondary-darker); }
#examResults { text-align: center; padding: 2rem 1rem; flex-grow: 1; display: none; flex-direction: column; justify-content: center; align-items: center; }
#examResults h3 { margin-top: 0; margin-bottom: 1.5rem; font-size: 1.8rem; color: var(--primary-darker); }
#scoreDisplay { font-size: 1.5rem; font-weight: 500; margin-bottom: 2rem; background-color: var(--container-bg); padding: 1rem 1.5rem; border-radius: var(--border-radius); box-shadow: var(--box-shadow); display: inline-block; }
#examResults button { min-width: 8rem; padding: 0.7rem 1.5rem; font-size: 1rem; background-color: var(--primary-color); color: white; border-color: var(--primary-color); }
#examResults button:hover { background-color: var(--primary-darker); border-color: var(--primary-darker); }
body:not(.card-view-active) .flashcard-view, body:not(.exam-mode-active) .exam-view, body:not(.sentence-mode-active) .sentence-view { display: none !important; }
body.card-view-active .word-list-main, body.card-view-active .exam-view, body.card-view-active .sentence-view { display: none !important; }
body.card-view-active .flashcard-view { display: flex !important; }
body.exam-mode-active .word-list-main, body.exam-mode-active .flashcard-view, body.exam-mode-active .sentence-view { display: none !important; }
body.exam-mode-active .exam-view { display: flex !important; }
body.sentence-mode-active .word-list-main, body.sentence-mode-active .flashcard-view, body.sentence-mode-active .exam-view { display: none !important; }
body.sentence-mode-active .sentence-view { display: flex !important; }
.studied-word td { background-color: #e6ffe6 !important; }
.sentence-entry.studied-word .headword { background-color: #d4edda; }
.sentence-view-header { display: flex; align-items: center; margin-bottom: 1rem; padding-bottom: 0.5rem; border-bottom: 2px solid var(--primary-color); position: relative; }
.sentence-counter { font-size: 1rem; font-weight: 500; color: var(--text-light); white-space: nowrap; margin-right: 1em; flex-shrink: 0; }
.sentence-view-header h2 { flex-grow: 1; text-align: center; margin: 0; padding: 0; border: none; color: var(--primary-darker); font-size: 1.3rem; }
.modal { display: none; position: fixed; z-index: 1100; left: 0; top: 0; width: 100%; height: 100%; overflow: auto; background-color: rgba(0,0,0,0.4); }
.modal-content { background-color: #fefefe; margin: 15% auto; padding: 20px; border: 1px solid #888; width: 80%; max-width: 400px; border-radius: var(--border-radius); position: relative; box-shadow: var(--box-shadow-lg); }
.close-button { color: #aaa; position: absolute; top: 10px; right: 15px; font-size: 28px; font-weight: bold; line-height: 1; }
.close-button:hover, .close-button:focus { color: black; text-decoration: none; cursor: pointer; }
.modal-content h4 { margin-top: 0; margin-bottom: 15px; border-bottom: 1px solid var(--border-color); padding-bottom: 10px; }
#modal-folder-list ul { max-height: 300px; overflow-y: auto; margin-top: 10px; }
#modal-folder-list li { margin-bottom: 5px; }
.modal-folder-button { width: 100%; padding: 8px 12px; text-align: left; background-color: #f8f9fa; border: 1px solid var(--border-color); border-radius: var(--border-radius); cursor: pointer; transition: background-color var(--transition-speed); font-size: var(--base-font-size); display: block; box-sizing: border-box; margin-bottom: 3px; }
.modal-folder-button:hover { background-color: #e9ecef; }

/* --- Responsive Adjustments --- */
@media (min-width: 769px) { /* PC */
    .container > .top-controls {
        /* width: 40%;  PC에서는 컨트롤 영역 너비를 줄일 수 있음 (선택적) */
        /* max-width: 800px; */
        padding: 0.75rem 1rem;
    }
    .control-row { /* PC에서는 gap을 더 크게 */
        gap: 0.8rem;
    }
    .control-btn, .dropbtn {
        padding: 0.7rem 1.1rem;
        font-size: calc(var(--base-font-size) + 0.05rem);
    }
     /* PC: 첫 번째, 두 번째 줄 너비 100% */
    .top-controls > .control-row:nth-child(1),
    .top-controls > .control-row:nth-child(2) {
        width: 100%;
    }
    /* PC: 세 번째 줄은 내용에 맞게 (왼쪽 정렬 유지) */
    .top-controls > .control-row:nth-child(3) {
        width: auto; /* 또는 필요한 경우 100% */
    }
    .top-controls > .control-row:nth-child(3) .selection-mode-controls {
        margin-left: auto; /* 오른쪽 정렬 유지 */
    }

    .card-controls { max-width: 44rem; gap: 0.3rem; }
    .card-controls button { padding: 0.4rem 0.5rem; font-size: 1.2rem; }
    #mcOptions { grid-template-columns: repeat(2, 1fr); }
}

@media (min-width: 481px) and (max-width: 768px) { /* Tablet */
    :root { --base-font-size: 0.85rem; }
    .container > .top-controls { padding: 0.75rem 0.75rem; }
    .control-row { gap: 0.6rem; margin-bottom: 0.6rem; }
    .control-btn, .dropbtn {
        padding: 0.6rem 0.9rem;
        font-size: calc(var(--base-font-size) + 0.02rem);
    }
    /* 태블릿: 모든 줄 100% 너비, space-between 유지 */
    .top-controls > .control-row {
        width: 100%;
        justify-content: space-between; /* 첫째, 둘째 줄은 유지 */
    }
    .top-controls > .control-row:nth-child(3) {
        justify-content: flex-start; /* 셋째 줄은 왼쪽 정렬 */
    }
    .top-controls > .control-row:nth-child(3) .selection-mode-controls {
        margin-left: auto;
    }

    .control-input.range-input { /* 태블릿에서 입력 필드 크기 조정 */
        width: 3rem; padding: 0.4rem;
    }
    .folder-sidebar { width: 13rem; left: -13rem; }
    #word-table-header th, #word-table-body td { padding: 0.7rem 0.8rem; }
    .card { min-height: 16rem; }
    .card-content { font-size: 1.4rem; }
    .tts-toggle-icon { width: 2.2rem; height: 2.2rem; font-size: 1.2rem; }
    .sentence-view-header h2 { font-size: 1.2rem; }
    .sentence-counter { font-size: 0.95rem; margin-right: 0.8em; }
    .card-controls { gap: 0.5rem; }
    .card-controls button { padding: 0.6rem 0.8rem; }
    .card-counter { padding: 0.5rem 0.6rem; font-size: 0.9rem; margin: 0 0.25rem; }
    #mcQuestion { min-height: 3.5rem; padding-top: 0.8rem; padding-bottom: 0.8rem; font-size: 1.4rem; margin-bottom: 1.5rem; }
    #mcOptions li { font-size: 0.95rem; padding: 0.8rem 1rem; }
}

@media (max-width: 480px) { /* Mobile */
    :root { --base-font-size: 0.85rem; } /* 모바일 기본 폰트 크기를 조금 더 줄여봅니다. */
    .container { padding: 0.6rem 0.3rem; margin: 0.3rem auto; } /* 컨테이너 좌우 패딩도 약간 줄임 */
    .top-controls { padding: 0.3rem; } /* top-controls 전체 패딩도 약간 줄임 */

    .control-row {
        gap: 0.1rem; /* 모바일에서 요소 간 기본 간격을 더 줄입니다. */
        margin-bottom: 0.3rem; /* 줄 간격도 약간 줄임 */
        justify-content: flex-start !important; /* 왼쪽 정렬 유지 (이미 적용됨) */
        /* align-items: center; /* 수직 중앙 정렬은 유지 */
    }

    .control-btn, .dropbtn {
        padding: 0.4rem 0.5rem; /* 모바일 버튼 패딩을 더 줄입니다. */
        font-size: var(--base-font-size); /* 폰트 크기는 위에서 정의한 base-font-size 따름 */
        line-height: 1.4; /* 버튼 높이를 줄이기 위해 line-height 조정 */
    }

    /* 첫 번째 줄 (햄버거, 파일, 언어, 폴더, 시험, 더보기) */
    .top-controls > .control-row:nth-child(1) .hamburger-btn {
        margin-right: 0.3rem; /* 햄버거 버튼 오른쪽 마진 줄임 */
        padding: 0.2rem 0.2rem; /* 햄버거 버튼 패딩 줄임 */
        font-size: 2.0rem; /* 햄버거 버튼 아이콘 크기 조정 */
    }
    /* 첫 번째 줄의 드롭다운 버튼들은 위의 .dropbtn 스타일을 따릅니다. */
    /* 필요하다면 개별적으로 더 줄일 수 있습니다. */
    .top-controls > .control-row:nth-child(1) .dropdown .dropbtn {
        /* 예: font-size: calc(var(--base-font-size) - 0.05rem); */
        /* 예: padding: 0.35rem 0.45rem; */
    }


    /* 두 번째 줄 (카드, 문장보기, 필터, TTS) */
    .top-controls > .control-row:nth-child(2) .control-btn,
    .top-controls > .control-row:nth-child(2) .dropbtn {
        /* 이 줄의 버튼들도 위의 .control-btn, .dropbtn 스타일을 따릅니다. */
        /* 만약 이 줄만 특별히 더 작게 하려면 여기서 덮어씁니다. */
        padding: 0.5rem 0.55rem; /* 패딩을 더 줄여봄 */
        font-size: calc(var(--base-font-size) 0.5rem); /* 폰트를 약간 더 작게 */
    }
    /* 필터 버튼 텍스트가 길면 "필터:" 부분을 줄이거나 아이콘으로 대체 고려 */
    #knowledge-filter-dropdown .dropbtn {
        /* 예: white-space: normal; word-break: keep-all; text-align: center; */
        /* 또는 JS에서 "필터"로만 표시하고 현재 필터명은 빼는 방법도 있음 */
    }


    /* 세 번째 줄 (단어뜻교환, 반복, 시작, 끝 | 선택 관리) */
    .top-controls > .control-row:nth-child(3) {
        align-items: center; /* 이 줄의 요소들을 수직 중앙 정렬 */
    }
    .top-controls > .control-row:nth-child(3) .swap-button {
        padding: 0.2rem; /* 아이콘 버튼 패딩 조정 */
        width: 2.0rem; /* 아이콘 버튼 너비 조정 */
        height: 2.0rem; /* 아이콘 버튼 높이 조정 (정사각형) */
    }
    .top-controls > .control-row:nth-child(3) .swap-button .swap-icons i {
        font-size: 0.7em; /* 아이콘 크기 조정 */
    }
    .top-controls > .control-row:nth-child(3) .range-label {
        font-size: calc(var(--base-font-size) 0.2rem); /* 레이블 폰트 크기 조정 */
        margin-left: 0.2rem;
        margin-right: 0.1rem; /* 레이블 오른쪽 간격 줄임 */
        padding: 0.4rem 0;
        white-space: nowrap;
    }
    .top-controls > .control-row:nth-child(3) .control-input.range-input {
        padding: 0.3rem; /* 입력 필드 패딩 조정 */
        font-size: calc(var(--base-font-size) 0.2rem); /* 입력 필드 폰트 크기 조정 */
        width: 1.8rem;   /* 입력 필드 너비 조정 */
        height: auto; /* line-height에 맞춰 자동 조절 */
        line-height: 1.1;
        margin: 0; /* 마진 제거하고 gap으로 제어 */
    }
    .top-controls > .control-row:nth-child(3) .selection-mode-controls {
        margin-left: auto; /* 오른쪽 정렬 유지 */
        gap: 0.2rem; /* 선택 관리 버튼들 사이 간격 줄임 */
    }
    .top-controls > .control-row:nth-child(3) .selection-mode-controls .control-btn {
        padding: 0.35rem 0.4rem; /* 선택 관리 버튼 패딩 줄임 */
        font-size: calc(var(--base-font-size) - 0.05rem); /* 선택 관리 버튼 폰트 크기 줄임 */
    }


    .folder-sidebar { width: 70%; left: -70%; padding: 0.8rem; } /* 모바일 사이드바 너비 조정 */
    .sentence-view { padding: 0.5rem; }
    .sentence-view h2 { font-size: 1.1rem; margin-bottom: 0.8rem;}
    .headword { font-size: 1rem; padding: 0.6rem 0.8rem; }
    .sentence-entry.open .details-container { padding: 0.8rem; }
    .definition { font-size: 0.90rem; }
    .example-sentence { font-size: 0.9rem; }
    .translation { font-size: 0.8rem; }
    #word-table-header th, #word-table-body td { padding: 0.5rem 0.6rem; font-size: 0.8rem; }
    .sentence-view-header h2 { font-size: 1.1rem; }
    .sentence-counter { font-size: 0.9rem; margin-right: 0.5em; }
    .exam-view { padding-top: 0.5rem; padding-bottom: 0.5rem; }
    #examContentArea { padding-bottom: 0.5rem; }
    #multipleChoiceArea { padding-left: 0.5rem; padding-right: 0.5rem; }
    #mcQuestion { font-size: 1.2rem; padding: 1rem; min-height: 4rem; margin-top: 0.2rem; margin-bottom: 1rem; }
    #mcOptions li { font-size: 0.9rem; padding: 0.7rem 1rem; }
    #mcOptions li::before { width: 1.3rem; height: 1.3rem; line-height: 1.3rem; font-size: 0.7rem; margin-right: 0.5rem; }
    .matching-column ul { min-height: 12rem; }
    #examControls { margin-top: auto; padding: 0.4rem 0.2rem; gap: 0.2rem; }
    #examProgress { margin-right: 0.3rem; padding: 0.4rem 0.4rem; font-size: 0.8rem; }
    #examControls button { padding: 0.4rem 0.5rem; font-size: 0.75rem; }
    #scoreDisplay { font-size: 1.3rem; }

    .flashcard-view {
        position: relative; /* 카운터의 absolute positioning 기준점 */
        padding-top: 2.5rem; /* 카운터가 위로 올라갈 공간 확보 (조정 가능) */
        display: flex;
        flex-direction: column; /* 내부 요소들을 세로로 배치 */
        /* justify-content: center; /* 카드와 컨트롤 그룹을 전체적으로 중앙에 (선택적) */
    }


    #cardCounter { top: 0.5rem; font-size: 0.9rem; }
    .card-nav-actions, .knowledge-state-controls { gap: 0.25rem; }
    .card-controls .control-btn, .card-controls .ks-btn { padding: 0.5rem 0.7rem; font-size: 0.8rem; }

    /* 카운터 위치 조정 */
    .card-counter {
        position: absolute; /* 플래시카드 뷰(.flashcard-view)를 기준으로 위치 */
        top: 0.5rem;        /* 위에서부터의 간격 (조정 가능) */
        left: 50%;
        transform: translateX(-50%); /* 정확한 수평 중앙 정렬 */
        width: auto; /* 내용에 맞게 너비 조절 */
        margin: 0;   /* 기존 마진 제거 */
        padding: 0.2rem 0.6rem; /* 내부 패딩 */
        background-color: rgba(248, 249, 250, 0.8); /* 반투명 배경 (선택적) */
        border-radius: var(--border-radius);
        box-shadow: var(--box-shadow-sm);
        font-size: 0.9rem; /* 폰트 크기 (조정 가능) */
        font-weight: 600;
        color: var(--text-light);
        z-index: 10; /* 다른 요소들보다 위에 표시 */
        text-align: center;
    }

    .card-container {
        /* 카운터가 위로 갔으므로, 카드 컨테이너의 상단 마진은 필요 없을 수 있음 */
        margin-top: 0; /* 또는 작은 값으로 조정 */
        margin-bottom: 1rem; /* 카드와 하단 컨트롤 사이 간격 */
        /* width, max-width 등은 기존 스타일 유지 */
        order: 1; /* 카운터 다음으로 배치 (flashcard-view가 flex column일 때) */
    }
    /* 카드 하단 컨트롤 영역 전체 */
    .card-controls {
        display: flex;
        flex-direction: column; /* 내부 그룹들을 세로로 쌓음 */
        align-items: center;   /* 그룹들을 가로 중앙 정렬 */
        gap: 0.5rem;           /* 각 그룹(줄) 사이의 간격 */
        width: 100%;
        max-width: 100%;
        padding: 0.5rem 0.1rem;
        box-sizing: border-box;
        order: 2; /* 카드 컨테이너 다음으로 배치 */
    }
    /* 모든 카드 컨트롤 버튼의 기본 크기 및 정렬 (모바일) */
    .card-controls .control-btn,
    .card-controls .ks-btn {
        padding: 0.5rem 0.7rem; /* 버튼 패딩 통일 (조정 가능) */
        font-size: 0.8rem;    /* 버튼 폰트 크기 통일 (조정 가능) */
        min-width: 4.5rem;     /* 버튼 최소 너비 (조정 가능, 텍스트에 따라) */
        text-align: center;   /* 버튼 내 텍스트 중앙 정렬 */
        flex-grow: 0;
        flex-shrink: 0;
        line-height: 1.2;
        /* margin: 0.1rem; /* 버튼들 사이의 최소 간격 (gap과 함께 사용) */
    }


    /* 내비게이션 버튼 그룹 (이전, 뒤집기, 다음, 목록) */
    .card-nav-actions {
        display: flex;
        flex-wrap: wrap;         /* 버튼이 넘치면 다음 줄로 */
        justify-content: center; /* 전체적으로 중앙 정렬 */
        align-items: center;
        width: auto; /* 내용에 맞게 너비 조절 (또는 100% 후 내부 정렬) */
                            /* 예: max-width: 15rem; /* 두 줄로 나올 때 전체 너비 제한 */
        gap: 0.3rem;             /* 버튼들 사이의 간격 */
        order: 1; /* card-controls 내에서 첫 번째 */
    }

    /* HTML 순서: 카운터(이제 없음), 이전, 뒤집기, 다음, 목록 */
    /* 첫째 줄: 이전 / 뒤집기 */
    #btn-prev-card { order: 1; }
    #btn-flip-card { order: 2; }

    /* 두 번째 줄: 다음 / 목록 */
    /* 줄바꿈을 위해 가상 요소 사용 */
    .card-nav-actions::after {
        content: "";
        flex-basis: 100%; /* 가상 요소가 한 줄을 다 차지하게 함 */
        height: 0;
        order: 3; /* 이전/뒤집기(order 2) 와 다음(order 4) 사이에 위치 */
    }
    #btn-next-card { order: 4; }
    #btn-close-card-view { order: 5; }


    /* 지식 상태 버튼 그룹 */
    .knowledge-state-controls {
        display: flex;
        justify-content: center; /* 가운데 정렬 */
        align-items: center;
        width: auto; /* 내용에 맞게 너비 조절 */
                            /* 예: max-width: 15rem; */
        gap: 0.3rem;
        order: 2; /* card-controls 내에서 두 번째 */
        margin-top: 0.2rem; /* 위쪽 줄과의 약간의 간격 추가 */
    }
    .knowledge-state-controls .ks-btn {
        /* 위의 .card-controls .ks-btn 스타일을 따름 */
        min-width: 4rem; /* "애매함" 같은 텍스트가 잘 보이도록 */
    }    
    .card-controls button { padding: 0.35rem 0.4rem; font-size: 0.95rem; }
    .card { max-width: 100%; width: 95%; min-height: 14rem; }
    .card-content { font-size: 1.15rem; padding: 0.3rem; line-height: 1.3; }
    .tts-toggle-icon { width: 2rem; height: 2rem; font-size: 1.1rem; bottom: 0.75rem; right: 0.75rem; }
}


/* --- 새롭게 세분화된 모바일 미디어 쿼리 --- */

/* 예: 6인치 수준 (약 360px 이상 ~ 399px) */
@media (min-width: 360px) and (max-width: 399px) {
    :root { --base-font-size: 0.75rem; }
    .container { padding: 0.5rem 0.3rem; margin: 0.3rem auto; }
    .top-controls { padding: 0.3rem; }
    .control-row { gap: 0.2rem; margin-bottom: 0.3rem; }

    .control-btn, .dropbtn {
        padding: 0.4rem 0.5rem; /* 살짝 크게 */
        font-size: var(--base-font-size);
        line-height: 1.1;
    }
    .top-controls > .control-row:nth-child(1) .hamburger-btn {
        margin-right: 0.2rem; padding: 0.2rem 0.2rem; font-size: 1.1rem;
    }
    /* ... (기존 480px 스타일 중 이 크기에 적합한 것들을 여기에 배치/조정) ... */
    .top-controls > .control-row:nth-child(3) .swap-button {
        padding: 0.3rem; width: 2.5rem; height: 2.5rem;
    }
    .top-controls > .control-row:nth-child(3) .swap-button .swap-icons i {
        font-size: 0.7em;
    }
    .top-controls > .control-row:nth-child(3) .range-label {
        font-size: calc(var(--base-font-size) - 0.1rem);
        margin-left: 0.2rem; margin-right: 0.1rem;
    }
    .top-controls > .control-row:nth-child(3) .control-input.range-input {
        padding: 0.3rem; font-size: calc(var(--base-font-size) - 0.1rem); width: 2.2rem;
    }
    .flashcard-view { padding-top: 2.5rem; }
    .card-counter { top: 0.5rem; font-size: 0.9rem; }
    /* ... (나머지 뷰들의 패딩, 폰트 등 조정) ... */
}

/* 예: 6.3인치 수준 (약 400px 이상 ~ 419px) */
@media (min-width: 400px) and (max-width: 419px) {
    :root { --base-font-size: 0.8rem; } /* 폰트 크기 증가 */
    .control-row { gap: 0.25rem; margin-bottom: 0.35rem; } /* 간격 살짝 증가 */

    .control-btn, .dropbtn {
        padding: 0.45rem 0.6rem; /* 버튼 패딩 증가 */
        font-size: var(--base-font-size);
        line-height: 1.1;
    }
     .top-controls > .control-row:nth-child(1) .hamburger-btn {
        font-size: 1.2rem;
    }
    .top-controls > .control-row:nth-child(3) .control-input.range-input {
        width: 2.5rem; /* 입력 필드 너비 증가 */
    }
    /* 플래시 카드, 단어 목록 등 다른 요소들도 이 화면 크기에 맞게 조정 */
    .card-content { font-size: 1.25rem; }
    .flashcard-view { padding-top: 2.8rem; } /* 카운터 공간 확보 */
    .card-counter { top: 0.6rem; font-size: 0.95rem; }
}

/* 예: 6.5인치 수준 (약 420px 이상 ~ 449px) */
@media (min-width: 420px) and (max-width: 449px) {
    :root { --base-font-size: 0.85rem; }
    .control-row { gap: 0.3rem; margin-bottom: 0.4rem; }

    .control-btn, .dropbtn {
        padding: 0.5rem 0.7rem;
        font-size: var(--base-font-size);
        line-height: 1.2;
    }
    .top-controls > .control-row:nth-child(1) .hamburger-btn {
        font-size: 1.3rem;
    }
    .top-controls > .control-row:nth-child(3) .control-input.range-input {
        width: 2.8rem;
    }
    .card-content { font-size: 1.35rem; }
    .flashcard-view { padding-top: 3rem; }
    .card-counter { top: 0.7rem; font-size: 1rem; }
}

/* 예: 6.7인치 이상, 태블릿 미만 (약 450px 이상 ~ 480px 또는 태블릿 시작점 전까지) */
/* 현재 태블릿 시작점이 481px이므로, 이 구간은 기존 480px 스타일과 거의 유사하게 가져가되, 약간의 여유를 더 줄 수 있습니다. */
@media (min-width: 450px) and (max-width: 480px) { /* 480px은 기존 모바일 상한과 동일 */
    :root { --base-font-size: 0.9rem; } /* 태블릿 --base-font-size: 0.85rem 보다 약간 크게 설정 가능 */
                                        /* 또는 태블릿의 0.85rem과 동일하게 가져가도 됨 */
    .control-row { gap: 0.35rem; margin-bottom: 0.45rem; }

    .control-btn, .dropbtn {
        padding: 0.55rem 0.8rem;
        font-size: var(--base-font-size);
        line-height: 1.2;
    }
    .top-controls > .control-row:nth-child(1) .hamburger-btn {
        font-size: 1.4rem;
    }
    .top-controls > .control-row:nth-child(3) .control-input.range-input {
        width: 3.0rem;
    }
    .card-content { font-size: 1.4rem; }
    .flashcard-view { padding-top: 3.2rem; }
    .card-counter { top: 0.8rem; font-size: 1.05rem; }

    /* 중요: 이 구간의 스타일이 기존 `@media (max-width: 480px)`의 스타일과 충돌하지 않도록 주의.
       기존 480px 스타일 중 이 구간에서 덮어쓰고 싶은 부분만 여기에 명시합니다.
       만약 기존 480px 스타일이 이 구간에 그대로 적용되어도 괜찮다면, 이 미디어쿼리는 생략하거나
       아주 최소한의 조정만 넣습니다.
    */
}
/* --- 세분화된 모바일 미디어 쿼리 끝 --- */